{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"C'est quoi ce site web ? Ce site est un blog IT. Le but est de partager gratuitement les connaissances que j'ai acquises au fil des ans. Il explique plusieurs technologies list\u00e9es dans les onglets en haut du site. Chaque onglet contient plusieurs pages. Docker Introduction \u00e0 Docker Premiers pas avec Docker Docker compose Docker Swarm Kubernetes Cloud Azure AWS Google Infrastructure as a Code Terraform Vagrant Ansible","title":"Home"},{"location":"Cloud/AWS01/","text":"AWS : First Steps Ce tutoriel est une introduction au cloud AWS, il te permettra de te familiariser avec les concepts du cloud AWS, les services AWS, la s\u00e9curit\u00e9, l'architecture, la tarification et le support. Il peut \u00eatre utilis\u00e9 pour pr\u00e9parer le passage de la certification \"AWS Certified Cloud Practitioner\" Module 0.1 : Les Mod\u00e8les de d\u00e9ploiement pour le cloud computing Lors de la s\u00e9lection d'une strat\u00e9gie cloud, une entreprise doit tenir compte de facteurs tels que les composants d'application cloud requis, les outils de gestion des ressources pr\u00e9f\u00e9r\u00e9s et les exigences de l'infrastructure informatique. Les trois mod\u00e8les de d\u00e9ploiement sont : Le cloud, On-premises et Hybrides. A. D\u00e9ploiement dans le Cloud Ex\u00e9cuter toutes les parties de l'application dans le cloud. Migrer les applications existantes vers le cloud. Concevoir et cr\u00e9er de nouvelles applications dans le cloud. Dans un mod\u00e8le de d\u00e9ploiement dans le cloud, il est possible de migrer des applications existantes vers le cloud, ou concevoir et cr\u00e9er de nouvelles applications dans le cloud. Il est possible de cr\u00e9er ces applications sur une infrastructure de bas niveau qui n\u00e9cessite que le personnel informatique les g\u00e8re. il est \u00e9galement possible de les cr\u00e9er \u00e0 l'aide de services de niveau sup\u00e9rieur qui r\u00e9duisent les exigences de gestion, d'architecture et de mise \u00e0 l'\u00e9chelle de l'infrastructure principale. Par exemple, une entreprise peut cr\u00e9er une application compos\u00e9e de serveurs virtuels, de bases de donn\u00e9es et de composants r\u00e9seau enti\u00e8rement bas\u00e9s sur le cloud. B. D\u00e9ploiement On-premise D\u00e9ployer des ressources \u00e0 l'aide d'outils de virtualisation et de gestion des ressources. Augmenter l'utilisation des ressources en utilisant la gestion des applications et les technologies de virtualisation. Le d\u00e9ploiement On-Premise est \u00e9galement appel\u00e9 d\u00e9ploiement de cloud priv\u00e9. Dans ce mod\u00e8le, les ressources sont d\u00e9ploy\u00e9es sur site \u00e0 l'aide d'outils de virtualisation et de gestion des ressources. Par exemple, il est possible d'avoir des applications qui s'ex\u00e9cutent sur une technologie enti\u00e8rement conserv\u00e9e dans le datacenter on-premise. C. D\u00e9ploiement hybride Connecter les ressources bas\u00e9es sur le cloud \u00e0 l'infrastructure On-Premise. Int\u00e9grer des ressources bas\u00e9es sur le cloud avec des applications informatiques existantes. Dans un d\u00e9ploiement hybride, les ressources bas\u00e9es sur le cloud sont connect\u00e9es \u00e0 l'infrastructure On-premise. il faut peut-\u00eatre utiliser cette approche dans un certain nombre de situations. Par exemple, Quand des applications existantes qui sont mieux g\u00e9r\u00e9es On-premise, ou les r\u00e9glementations gouvernementales exigent que l'entreprise conserve certainnes donn\u00e9es On-premise. Par exemple, supposons qu'une entreprise souhaite utiliser des services cloud capables d'automatiser le traitement et l'analyse de donn\u00e9es par lots. Cependant, l'entreprise dispose de plusieurs applications h\u00e9rit\u00e9es qui sont plus adapt\u00e9es sur site et ne seront pas migr\u00e9es vers le cloud. Avec un d\u00e9ploiement hybride, l'entreprise serait en mesure de conserver les applications h\u00e9rit\u00e9es sur site tout en b\u00e9n\u00e9ficiant des services de donn\u00e9es et d'analyse qui s'ex\u00e9cutent dans le cloud. Module 0.2 : Avantages du Cloud computing :","title":"AWS"},{"location":"Cloud/AWS01/#aws-first-steps","text":"Ce tutoriel est une introduction au cloud AWS, il te permettra de te familiariser avec les concepts du cloud AWS, les services AWS, la s\u00e9curit\u00e9, l'architecture, la tarification et le support. Il peut \u00eatre utilis\u00e9 pour pr\u00e9parer le passage de la certification \"AWS Certified Cloud Practitioner\"","title":"AWS : First Steps"},{"location":"Cloud/AWS01/#module-01-les-modeles-de-deploiement-pour-le-cloud-computing","text":"Lors de la s\u00e9lection d'une strat\u00e9gie cloud, une entreprise doit tenir compte de facteurs tels que les composants d'application cloud requis, les outils de gestion des ressources pr\u00e9f\u00e9r\u00e9s et les exigences de l'infrastructure informatique. Les trois mod\u00e8les de d\u00e9ploiement sont : Le cloud, On-premises et Hybrides.","title":"Module 0.1 : Les Mod\u00e8les de d\u00e9ploiement pour le cloud computing"},{"location":"Cloud/AWS01/#a-deploiement-dans-le-cloud","text":"Ex\u00e9cuter toutes les parties de l'application dans le cloud. Migrer les applications existantes vers le cloud. Concevoir et cr\u00e9er de nouvelles applications dans le cloud. Dans un mod\u00e8le de d\u00e9ploiement dans le cloud, il est possible de migrer des applications existantes vers le cloud, ou concevoir et cr\u00e9er de nouvelles applications dans le cloud. Il est possible de cr\u00e9er ces applications sur une infrastructure de bas niveau qui n\u00e9cessite que le personnel informatique les g\u00e8re. il est \u00e9galement possible de les cr\u00e9er \u00e0 l'aide de services de niveau sup\u00e9rieur qui r\u00e9duisent les exigences de gestion, d'architecture et de mise \u00e0 l'\u00e9chelle de l'infrastructure principale. Par exemple, une entreprise peut cr\u00e9er une application compos\u00e9e de serveurs virtuels, de bases de donn\u00e9es et de composants r\u00e9seau enti\u00e8rement bas\u00e9s sur le cloud.","title":"A. D\u00e9ploiement dans le Cloud"},{"location":"Cloud/AWS01/#b-deploiement-on-premise","text":"D\u00e9ployer des ressources \u00e0 l'aide d'outils de virtualisation et de gestion des ressources. Augmenter l'utilisation des ressources en utilisant la gestion des applications et les technologies de virtualisation. Le d\u00e9ploiement On-Premise est \u00e9galement appel\u00e9 d\u00e9ploiement de cloud priv\u00e9. Dans ce mod\u00e8le, les ressources sont d\u00e9ploy\u00e9es sur site \u00e0 l'aide d'outils de virtualisation et de gestion des ressources. Par exemple, il est possible d'avoir des applications qui s'ex\u00e9cutent sur une technologie enti\u00e8rement conserv\u00e9e dans le datacenter on-premise.","title":"B. D\u00e9ploiement On-premise"},{"location":"Cloud/AWS01/#c-deploiement-hybride","text":"Connecter les ressources bas\u00e9es sur le cloud \u00e0 l'infrastructure On-Premise. Int\u00e9grer des ressources bas\u00e9es sur le cloud avec des applications informatiques existantes. Dans un d\u00e9ploiement hybride, les ressources bas\u00e9es sur le cloud sont connect\u00e9es \u00e0 l'infrastructure On-premise. il faut peut-\u00eatre utiliser cette approche dans un certain nombre de situations. Par exemple, Quand des applications existantes qui sont mieux g\u00e9r\u00e9es On-premise, ou les r\u00e9glementations gouvernementales exigent que l'entreprise conserve certainnes donn\u00e9es On-premise. Par exemple, supposons qu'une entreprise souhaite utiliser des services cloud capables d'automatiser le traitement et l'analyse de donn\u00e9es par lots. Cependant, l'entreprise dispose de plusieurs applications h\u00e9rit\u00e9es qui sont plus adapt\u00e9es sur site et ne seront pas migr\u00e9es vers le cloud. Avec un d\u00e9ploiement hybride, l'entreprise serait en mesure de conserver les applications h\u00e9rit\u00e9es sur site tout en b\u00e9n\u00e9ficiant des services de donn\u00e9es et d'analyse qui s'ex\u00e9cutent dans le cloud.","title":"C. D\u00e9ploiement hybride"},{"location":"Cloud/AWS01/#module-02-avantages-du-cloud-computing","text":"","title":"Module 0.2 : Avantages du Cloud computing :"},{"location":"Cloud/Azure01/","text":"Azure : Les fondamentaux Modules % Les concepts du cloud 20-25% Les services Azure de base 15-20% Les solutions de base et les outils de gestion 10-15% La s\u00e9curit\u00e9 g\u00e9n\u00e9rale et la s\u00e9curit\u00e9 du r\u00e9seau 0-15% L'identit\u00e9, la gouvernance, la confidentialit\u00e9 et la conformit\u00e9 20-25% La gestion des co\u00fbts Azure et les accords de niveau de service 10-15% Ce Tuto est une pr\u00e9paration au certification AZ-900 Microsoft Azure Fundamentals. Les % indiquent le poids relatif de chaque module dans l'examen. Plus le pourcentage est \u00e9lev\u00e9, plus vous \u00eates susceptible de voir des questions dans ce domaine. Module 1 : Les concepts du cloud Module 01 : Les grandes lignes Les notions suivantes seront expliqu\u00e9es Les Mod\u00e8les du cloud Public, Private et cloud Hybrid. Choisir la solution \u00e0 son utilisation Avantages et consid\u00e9rations du cloud Avantages du Cloud Consid\u00e9rations sur le cloud Les diff\u00e9rents services Cloud IaaS, PaaS, and SaaS Partager la responsabilit\u00e9 1.1 Les Mod\u00e8les du cloud Le Cloud computing est l'utilisation de services informatiques via le r\u00e9seau, permettant une innovation plus rapide, des ressources flexibles et des \u00e9conomies d'\u00e9chelle. 1.1.1 D\u00e9finir le cloud computing Propri\u00e9t\u00e9 de services cloud ou d'h\u00e9bergement fournisseur. Fournit des ressources et des services aux plusieurs organisations et utilisateurs. Accessible via un r\u00e9seau s\u00e9curis\u00e9 connexion (g\u00e9n\u00e9ralement sur le l'Internet). 1.1.2 D\u00e9finir le Cloud Public. Propri\u00e9t\u00e9 de services cloud ou de l'h\u00e9bergeur. Fournit des ressources et des services aux plusieurs organisations et utilisateurs. Accessible via un r\u00e9seau s\u00e9curis\u00e9 connexion (g\u00e9n\u00e9ralement sur le l'Internet). 1.1.3 D\u00e9crire le cloud priv\u00e9 Les organisations cr\u00e9ent un environnement cloud dans leur centre de donn\u00e9es. L'organisation est responsable de l'exploitation des services qu'ils fournissent. Ne donne pas acc\u00e8s aux utilisateurs en dehors de l'organisation. 1.1.4 D\u00e9crire le cloud hybride Combine les clouds publics et priv\u00e9s pour permettre aux applications de s'ex\u00e9cuter dans le plus grand nombre emplacement appropri\u00e9. 1.1.5 Comparez et contrastez les trois diff\u00e9rents mod\u00e8les de cloud Service Cloud Description Public Pas de d\u00e9penses en capital \u00e0 mettre \u00e0 l'\u00e9chelle. Les applications peuvent \u00eatre rapidement provisionn\u00e9es et d\u00e9provisionn\u00e9es. Les organisations ne paient que pour ce qu'elles utilisent. Priv\u00e9 Le mat\u00e9riel doit \u00eatre achet\u00e9 pour le d\u00e9marrage et la maintenance. Les applications peuvent \u00eatre rapidement provisionn\u00e9es et d\u00e9provisionn\u00e9es. Les organisations ne paient que pour ce qu'elles utilisent. Hybride Fournit le plus de flexibilit\u00e9. Les organisations d\u00e9cident o\u00f9 deployer ses applications. Les organisations contr\u00f4lent la s\u00e9curit\u00e9, la conformit\u00e9 ou les exigences l\u00e9gales 1.2 Avantages et consid\u00e9rations du cloud 1.2.1 Identifier les avantages du cloud computing comme la haute disponiblit\u00e9 , l'\u00e9volutivit\u00e9 (la scalabilit\u00e9) , elesticit, agilit\u00e9 et reprise apr\u00e8s sinistre. Haute disponibilit\u00e9 (99,99% du temps ) Scalabilit\u00e9 Port\u00e9e mondiale ( Global reach) Agilit\u00e9 Tol\u00e9rance aux pannes Elasticit\u00e9 Consid\u00e9rations relatives aux co\u00fbts pr\u00e9visionnels 1.2.2 Identifier la diff\u00e9rence entre CapEx et OpEx. CapEx : d\u00e9penses d'investissement ( Capital Expenditure). Les d\u00e9penses initiales d'argent sur l'infrastructure physique. Les co\u00fbts de CapEx ont une valeur qui diminue avec le temps. OpEx : d\u00e9penses d'exploitation ( Operational Expenditure). Les d\u00e9penses et la facturation de services ou de produits selon les besoins Les d\u00e9penses sont d\u00e9duites la m\u00eame ann\u00e9e. 1.2.3 D\u00e9crire le mod\u00e8le bas\u00e9 sur la consommation Les fournisseurs de service cloud propose un service bas\u00e9 sur la consommation. Ceci dit, ll'utilisateur final paie seulement pour la resource utilis\u00e9e. Bonne m\u00e9thode pour pr\u00e9dir le cost Les prix des ressources et des services individuels sont fournis La facturation est bas\u00e9e sur l'utilisation r\u00e9elle 1.3 Les diff\u00e9rents services Cloud 1.3.1 Infrastructure-as-a-Service (IaaS) Construction d'une infrastructure informatique pay-as-you-go en louant des serveurs, des machines virtuelles, du stockage, r\u00e9seaux et syst\u00e8mes d'exploitation d'un fournisseur de cloud. 1.3.2 Platform-as-a-Service (PaaS) Fournit un environnement pour cr\u00e9er, tester et d\u00e9ployer des applications ; sans pour autant en se concentrant sur la gestion de l'infrastructure sous-jacente. 1.3.3 Software-as-a-Service (SaaS) Les utilisateurs se connectent et utilisent des applications bas\u00e9es sur le cloud via internet. Par exemple : Microsoft Office 365 messagerie et calendriers 1.3.4 Identifier un type de service en fonction d'un cas d'utilisation Comparaisons des services Cloud: Iaas PaaS Saas Le service cloud le plus flexible Se concentrer sur le developpement des applications Mod\u00e8le pay-as-you-go L'utilisateur configure et g\u00e9re le hardware pour son application. La gestion de la plateforme est g\u00e9r\u00e9 par le fournisseur du cloud. Les utilisateurs paient l'utilisation du logiciel via un abonnement universel 1.3.5 D\u00e9crire le mod\u00e8le de responsabilit\u00e9 partag\u00e9e 1.3.6 Serverless computing (L'informatique sans serveur) Azure Functions:est le code qui ex\u00e9cute votre service et non le plate-forme ou infrastructure sous-jacente. \u00c7a cr\u00e9e infrastructure bas\u00e9e sur un \u00e9v\u00e9nement Azure Logic Apps:est un service cloud qui vous aide automatiser et orchestrer les t\u00e2ches, les processus m\u00e9tier et workflows lorsque vous devez int\u00e9grer des applications, des donn\u00e9es, des syst\u00e8mes, Et services Note Avec Serverless computing, le fournisseur de services cloud provisionne, dimensionne et g\u00e8re automatiquement l'infrastructure requise pour ex\u00e9cuter le code. Module 2 : Les services Azure de base 2.1 : Composants architecturaux Azure 2.1.1 : R\u00e9gions et zones de disponibilit\u00e9 R\u00e9gions Azure propose des offres de r\u00e9gions plus globales que n'importe quel autre fournisseur cloud avec plus de 60 r\u00e9gions dans plus que 140 pays. Les r\u00e9gions sont compos\u00e9es d'un ou plusieurs datacenters proches. Cela Fournit flexibilit\u00e9 et \u00e9volutivit\u00e9 pour r\u00e9duire la latence des clients. Cela pr\u00e9serve la r\u00e9sidence de la Data gr\u00e2ce \u00e0 une offre de conformit\u00e9 compl\u00e8te. R\u00e9gions Pairs Au moins 400 km de s\u00e9paration entre paires de r\u00e9gions. R\u00e9plications automatique de certains services. Reprise prioritaire de la r\u00e9gion en cas de panne. Les mises \u00e0 jour sont d\u00e9ploy\u00e9e s\u00e9quentiellement pour minimiser les temps d'arr\u00eat Lien web: https://aka.ms/PairedRegions Zones de disponibilit\u00e9 Fournir une protection contre les temps d'arr\u00eat dus \u00e0 d\u00e9faillance du centre de donn\u00e9es. Datacenters physiquement s\u00e9par\u00e9s au sein de la m\u00eame r\u00e9gion. Chaque Datacenter est \u00e9quip\u00e9 de son propre syst\u00e8me d'alimentation, refroidissement et r\u00e9seau. Connect\u00e9 par un r\u00e9seau fibre optique priv\u00e9. 2.1.2 : Abonnements et groupes de ressources Les Ressources Azure Les ressources Azure sont des composants tels que le stockage, les machines virtuelles et les r\u00e9seaux qui sont disponibles pour cr\u00e9er des solutions cloud. Groupes de ressources Un groupe de ressources est un conteneur \u00e0 g\u00e9rer et regrouper les ressources en une seule unit\u00e9. Les ressources ne peuvent exister que dans une seule ressource grouper. Les ressources peuvent \u00eatre dans des r\u00e9gions diff\u00e9rentes. Les ressources peuvent \u00eatre d\u00e9plac\u00e9es vers un autre groupe de ressources Une application peut utiliser plusieurs groupes de ressource Azure Resource Manager il fournit un couche de gestion qui permet de cr\u00e9er, mettre \u00e0 jour et supprimer des ressources dans votre abonnement Azure. Les Abonnements Azure Un abonnement Azure offre une authentification et autorisation d'acc\u00e8s au compte Azure. Limite de facturation : g\u00e9n\u00e9rer une facturation distincte rapports et factures pour chaque abonnement. P\u00e9rim\u00e8tre de contr\u00f4le d'acc\u00e8s : g\u00e9rer et contr\u00f4ler l'acc\u00e8s aux ressources que les utilisateurs peuvent mise \u00e0 disposition avec des abonnements sp\u00e9cifiques. Exercice : Connecte-toi \u00e0 https://portal.azure.com d\u00e9couvre la pae d'acceuil Trouves tous les services et tout ce qui est disponible. Gestionnaire des groupes: Management groups peut inclure plusieurs abonnements Azure Les abonnements h\u00e9ritent les conditions appliqu\u00e9es au management groupes 10 000 Management groups peuvent \u00eatre support\u00e9s dans un r\u00e9pertoire unique. 2.2 : Ressources Azure de base Les avantages et l'utilisation de : Macines virtuelles, Azure App Services, Instances de containeur Azure (ACI), Azure Kubernetes services ( AKS) et Windows Virtual Desktop. R\u00e9seau Virtuel, Passerelel VPN, Virtual network peering et ExpressRoute. Container (Blob) Stockage, Disk Storage, Azure Database pour MySQL, Azure DB pour PostgreSQK, SQL Managed instance. Marketplace Azure. 2.2.1 : Calcul Azure Compute est un service informatique \u00e0 la demande qui fournit des ressources telles que les disques, les processeurs, la m\u00e9moire, la mise en r\u00e9seau et les syst\u00e8mes d'exploitation. MAchines virtuelles Azure Les machines virtuelles Azure (VM) sont des \u00e9mulations logicielles d'ordinateurs physiques - Inclut le processeur virtuel, la m\u00e9moire, le stockage et la mise en r\u00e9seau. - Offre IaaS qui offre un contr\u00f4le total et personnalisation. Exercice : Cr\u00e9er une machine virtuelle sur Azure Portal. se connecter \u00e0 la VM installer le r\u00f4le serveur web et tester. Azure App Services Azure App Services est une plateforme enti\u00e8rement g\u00e9r\u00e9e pour cr\u00e9er,d\u00e9ployer et mettre \u00e0 l'\u00e9chelle rapidement des applications Web et des API. - il fonctionne avec .Net, NetC Core, Node.js, Java, Python ou php - Offre PaaS avec performances, s\u00e9curit\u00e9 et les exigences de conformit\u00e9. Exercice : Cr\u00e9er une application web en utilisant une image DOcker. Tester l'application web. Instances de containeur Azure Les conteneurs Azure sont un environnement virtualis\u00e9 l\u00e9ger qui ne n\u00e9cessite pas gestion du syst\u00e8me d'exploitation et peut r\u00e9pondre aux changements \u00e0 la demande. Instances de conteneur Azure: Offre Paas qui ex\u00e9cute des conteneurs Azure sans avoir besoin des VMs ou autres services. Service Kubernetes Azure: Un service d'orchestration pour des conteneurs avec architectures distribu\u00e9e. Exercice : Cr\u00e9er une instance de conteneur Deployer et tester le conteneur. Windows Virtuel Desktop Windows Virtual Desktop est une virtualisation de bureau et d'application qui tourne dans le cloud. - Cr\u00e9er un environnement de virtualisation de postes de travail complet sans avoir \u00e0 ex\u00e9cuter des serveurs de passerelle suppl\u00e9mentaires. - Publier des pools d'h\u00f4tes illimit\u00e9s pour accueillir divers charges de travail. - R\u00e9duire les co\u00fbts avec des ressources multi-sessions regroup\u00e9es 2.2.2 : R\u00e9seau Les service de r\u00e9seau Azure. R\u00e9seau virtuel Azure (VNet) Permet les ressources Azure de se communiquer entre eux, avec internet et le r\u00e9seau local. Passerelle r\u00e9seau priv\u00e9 virtuel (VPN) il est utilis\u00e9 pour envoyer des trafique encrypt\u00e9 entre le r\u00e9seau virtuel de Azure et le r\u00e9seau local via Internet. Express Route Azure \u00e9tend le r\u00e9seau local dans Azure via une connexion priv\u00e9e facilit\u00e9e par un fournisseur de connectivit\u00e9 Exercice: Cr\u00e9er un r\u00e9seau virtuel. Cr\u00e9er deux machines virtuelles tester la connection entre les VMs. 2.2.3 : Stockage Les services de stackage Azure : 2.2.4 : Base de donn\u00e9es Module 3 : Les solutions d'Azure et ses outils de gestion Module 4 : La s\u00e9curit\u00e9 Azure et la s\u00e9curit\u00e9 r\u00e9seau Module 5 : Identit\u00e9, gouvernance, confidentialit\u00e9 et conformit\u00e9 Module 6 : Tarifications et cycle de vie Azure","title":"Fondamentaux Azure"},{"location":"Cloud/Azure01/#azure-les-fondamentaux","text":"Modules % Les concepts du cloud 20-25% Les services Azure de base 15-20% Les solutions de base et les outils de gestion 10-15% La s\u00e9curit\u00e9 g\u00e9n\u00e9rale et la s\u00e9curit\u00e9 du r\u00e9seau 0-15% L'identit\u00e9, la gouvernance, la confidentialit\u00e9 et la conformit\u00e9 20-25% La gestion des co\u00fbts Azure et les accords de niveau de service 10-15% Ce Tuto est une pr\u00e9paration au certification AZ-900 Microsoft Azure Fundamentals. Les % indiquent le poids relatif de chaque module dans l'examen. Plus le pourcentage est \u00e9lev\u00e9, plus vous \u00eates susceptible de voir des questions dans ce domaine.","title":"Azure : Les fondamentaux"},{"location":"Cloud/Azure01/#module-1-les-concepts-du-cloud","text":"","title":"Module 1 : Les concepts du cloud"},{"location":"Cloud/Azure01/#module-01-les-grandes-lignes","text":"Les notions suivantes seront expliqu\u00e9es Les Mod\u00e8les du cloud Public, Private et cloud Hybrid. Choisir la solution \u00e0 son utilisation Avantages et consid\u00e9rations du cloud Avantages du Cloud Consid\u00e9rations sur le cloud Les diff\u00e9rents services Cloud IaaS, PaaS, and SaaS Partager la responsabilit\u00e9","title":"Module 01 : Les grandes lignes"},{"location":"Cloud/Azure01/#11-les-modeles-du-cloud","text":"Le Cloud computing est l'utilisation de services informatiques via le r\u00e9seau, permettant une innovation plus rapide, des ressources flexibles et des \u00e9conomies d'\u00e9chelle.","title":"1.1 Les Mod\u00e8les du cloud"},{"location":"Cloud/Azure01/#111-definir-le-cloud-computing","text":"Propri\u00e9t\u00e9 de services cloud ou d'h\u00e9bergement fournisseur. Fournit des ressources et des services aux plusieurs organisations et utilisateurs. Accessible via un r\u00e9seau s\u00e9curis\u00e9 connexion (g\u00e9n\u00e9ralement sur le l'Internet).","title":"1.1.1 D\u00e9finir le cloud computing"},{"location":"Cloud/Azure01/#112-definir-le-cloud-public","text":"Propri\u00e9t\u00e9 de services cloud ou de l'h\u00e9bergeur. Fournit des ressources et des services aux plusieurs organisations et utilisateurs. Accessible via un r\u00e9seau s\u00e9curis\u00e9 connexion (g\u00e9n\u00e9ralement sur le l'Internet).","title":"1.1.2 D\u00e9finir le Cloud Public."},{"location":"Cloud/Azure01/#113-decrire-le-cloud-prive","text":"Les organisations cr\u00e9ent un environnement cloud dans leur centre de donn\u00e9es. L'organisation est responsable de l'exploitation des services qu'ils fournissent. Ne donne pas acc\u00e8s aux utilisateurs en dehors de l'organisation.","title":"1.1.3 D\u00e9crire le cloud priv\u00e9"},{"location":"Cloud/Azure01/#114-decrire-le-cloud-hybride","text":"Combine les clouds publics et priv\u00e9s pour permettre aux applications de s'ex\u00e9cuter dans le plus grand nombre emplacement appropri\u00e9.","title":"1.1.4 D\u00e9crire le cloud hybride"},{"location":"Cloud/Azure01/#115-comparez-et-contrastez-les-trois-differents-modeles-de-cloud","text":"Service Cloud Description Public Pas de d\u00e9penses en capital \u00e0 mettre \u00e0 l'\u00e9chelle. Les applications peuvent \u00eatre rapidement provisionn\u00e9es et d\u00e9provisionn\u00e9es. Les organisations ne paient que pour ce qu'elles utilisent. Priv\u00e9 Le mat\u00e9riel doit \u00eatre achet\u00e9 pour le d\u00e9marrage et la maintenance. Les applications peuvent \u00eatre rapidement provisionn\u00e9es et d\u00e9provisionn\u00e9es. Les organisations ne paient que pour ce qu'elles utilisent. Hybride Fournit le plus de flexibilit\u00e9. Les organisations d\u00e9cident o\u00f9 deployer ses applications. Les organisations contr\u00f4lent la s\u00e9curit\u00e9, la conformit\u00e9 ou les exigences l\u00e9gales","title":"1.1.5  Comparez et contrastez les trois diff\u00e9rents mod\u00e8les de cloud"},{"location":"Cloud/Azure01/#12-avantages-et-considerations-du-cloud","text":"","title":"1.2  Avantages et consid\u00e9rations du cloud"},{"location":"Cloud/Azure01/#121-identifier-les-avantages-du-cloud-computing-comme-la-haute-disponiblite-levolutivite-la-scalabilite-elesticit-agilite-et-reprise-apres-sinistre","text":"Haute disponibilit\u00e9 (99,99% du temps ) Scalabilit\u00e9 Port\u00e9e mondiale ( Global reach) Agilit\u00e9 Tol\u00e9rance aux pannes Elasticit\u00e9 Consid\u00e9rations relatives aux co\u00fbts pr\u00e9visionnels","title":"1.2.1 Identifier les avantages du cloud computing comme la haute disponiblit\u00e9 , l'\u00e9volutivit\u00e9 (la scalabilit\u00e9) , elesticit, agilit\u00e9 et reprise apr\u00e8s sinistre."},{"location":"Cloud/Azure01/#122-identifier-la-difference-entre-capex-et-opex","text":"CapEx : d\u00e9penses d'investissement ( Capital Expenditure). Les d\u00e9penses initiales d'argent sur l'infrastructure physique. Les co\u00fbts de CapEx ont une valeur qui diminue avec le temps. OpEx : d\u00e9penses d'exploitation ( Operational Expenditure). Les d\u00e9penses et la facturation de services ou de produits selon les besoins Les d\u00e9penses sont d\u00e9duites la m\u00eame ann\u00e9e.","title":"1.2.2 Identifier la diff\u00e9rence entre CapEx et OpEx."},{"location":"Cloud/Azure01/#123-decrire-le-modele-base-sur-la-consommation","text":"Les fournisseurs de service cloud propose un service bas\u00e9 sur la consommation. Ceci dit, ll'utilisateur final paie seulement pour la resource utilis\u00e9e. Bonne m\u00e9thode pour pr\u00e9dir le cost Les prix des ressources et des services individuels sont fournis La facturation est bas\u00e9e sur l'utilisation r\u00e9elle","title":"1.2.3 D\u00e9crire le mod\u00e8le bas\u00e9 sur la consommation"},{"location":"Cloud/Azure01/#13-les-differents-services-cloud","text":"","title":"1.3  Les diff\u00e9rents services Cloud"},{"location":"Cloud/Azure01/#131-infrastructure-as-a-service-iaas","text":"Construction d'une infrastructure informatique pay-as-you-go en louant des serveurs, des machines virtuelles, du stockage, r\u00e9seaux et syst\u00e8mes d'exploitation d'un fournisseur de cloud.","title":"1.3.1 Infrastructure-as-a-Service (IaaS)"},{"location":"Cloud/Azure01/#132-platform-as-a-service-paas","text":"Fournit un environnement pour cr\u00e9er, tester et d\u00e9ployer des applications ; sans pour autant en se concentrant sur la gestion de l'infrastructure sous-jacente.","title":"1.3.2 Platform-as-a-Service (PaaS)"},{"location":"Cloud/Azure01/#133-software-as-a-service-saas","text":"Les utilisateurs se connectent et utilisent des applications bas\u00e9es sur le cloud via internet. Par exemple : Microsoft Office 365 messagerie et calendriers","title":"1.3.3 Software-as-a-Service (SaaS)"},{"location":"Cloud/Azure01/#134-identifier-un-type-de-service-en-fonction-dun-cas-dutilisation","text":"Comparaisons des services Cloud: Iaas PaaS Saas Le service cloud le plus flexible Se concentrer sur le developpement des applications Mod\u00e8le pay-as-you-go L'utilisateur configure et g\u00e9re le hardware pour son application. La gestion de la plateforme est g\u00e9r\u00e9 par le fournisseur du cloud. Les utilisateurs paient l'utilisation du logiciel via un abonnement universel","title":"1.3.4 Identifier un type de service en fonction d'un cas d'utilisation"},{"location":"Cloud/Azure01/#135-decrire-le-modele-de-responsabilite-partagee","text":"","title":"1.3.5 D\u00e9crire le mod\u00e8le de responsabilit\u00e9 partag\u00e9e"},{"location":"Cloud/Azure01/#136-serverless-computing-linformatique-sans-serveur","text":"Azure Functions:est le code qui ex\u00e9cute votre service et non le plate-forme ou infrastructure sous-jacente. \u00c7a cr\u00e9e infrastructure bas\u00e9e sur un \u00e9v\u00e9nement Azure Logic Apps:est un service cloud qui vous aide automatiser et orchestrer les t\u00e2ches, les processus m\u00e9tier et workflows lorsque vous devez int\u00e9grer des applications, des donn\u00e9es, des syst\u00e8mes, Et services Note Avec Serverless computing, le fournisseur de services cloud provisionne, dimensionne et g\u00e8re automatiquement l'infrastructure requise pour ex\u00e9cuter le code.","title":"1.3.6 Serverless computing (L'informatique sans serveur)"},{"location":"Cloud/Azure01/#module-2-les-services-azure-de-base","text":"","title":"Module 2 : Les services Azure de base"},{"location":"Cloud/Azure01/#21-composants-architecturaux-azure","text":"","title":"2.1 : Composants architecturaux Azure"},{"location":"Cloud/Azure01/#211-regions-et-zones-de-disponibilite","text":"R\u00e9gions Azure propose des offres de r\u00e9gions plus globales que n'importe quel autre fournisseur cloud avec plus de 60 r\u00e9gions dans plus que 140 pays. Les r\u00e9gions sont compos\u00e9es d'un ou plusieurs datacenters proches. Cela Fournit flexibilit\u00e9 et \u00e9volutivit\u00e9 pour r\u00e9duire la latence des clients. Cela pr\u00e9serve la r\u00e9sidence de la Data gr\u00e2ce \u00e0 une offre de conformit\u00e9 compl\u00e8te. R\u00e9gions Pairs Au moins 400 km de s\u00e9paration entre paires de r\u00e9gions. R\u00e9plications automatique de certains services. Reprise prioritaire de la r\u00e9gion en cas de panne. Les mises \u00e0 jour sont d\u00e9ploy\u00e9e s\u00e9quentiellement pour minimiser les temps d'arr\u00eat Lien web: https://aka.ms/PairedRegions Zones de disponibilit\u00e9 Fournir une protection contre les temps d'arr\u00eat dus \u00e0 d\u00e9faillance du centre de donn\u00e9es. Datacenters physiquement s\u00e9par\u00e9s au sein de la m\u00eame r\u00e9gion. Chaque Datacenter est \u00e9quip\u00e9 de son propre syst\u00e8me d'alimentation, refroidissement et r\u00e9seau. Connect\u00e9 par un r\u00e9seau fibre optique priv\u00e9.","title":"2.1.1 : R\u00e9gions et zones de disponibilit\u00e9"},{"location":"Cloud/Azure01/#212-abonnements-et-groupes-de-ressources","text":"Les Ressources Azure Les ressources Azure sont des composants tels que le stockage, les machines virtuelles et les r\u00e9seaux qui sont disponibles pour cr\u00e9er des solutions cloud. Groupes de ressources Un groupe de ressources est un conteneur \u00e0 g\u00e9rer et regrouper les ressources en une seule unit\u00e9. Les ressources ne peuvent exister que dans une seule ressource grouper. Les ressources peuvent \u00eatre dans des r\u00e9gions diff\u00e9rentes. Les ressources peuvent \u00eatre d\u00e9plac\u00e9es vers un autre groupe de ressources Une application peut utiliser plusieurs groupes de ressource Azure Resource Manager il fournit un couche de gestion qui permet de cr\u00e9er, mettre \u00e0 jour et supprimer des ressources dans votre abonnement Azure. Les Abonnements Azure Un abonnement Azure offre une authentification et autorisation d'acc\u00e8s au compte Azure. Limite de facturation : g\u00e9n\u00e9rer une facturation distincte rapports et factures pour chaque abonnement. P\u00e9rim\u00e8tre de contr\u00f4le d'acc\u00e8s : g\u00e9rer et contr\u00f4ler l'acc\u00e8s aux ressources que les utilisateurs peuvent mise \u00e0 disposition avec des abonnements sp\u00e9cifiques. Exercice : Connecte-toi \u00e0 https://portal.azure.com d\u00e9couvre la pae d'acceuil Trouves tous les services et tout ce qui est disponible. Gestionnaire des groupes: Management groups peut inclure plusieurs abonnements Azure Les abonnements h\u00e9ritent les conditions appliqu\u00e9es au management groupes 10 000 Management groups peuvent \u00eatre support\u00e9s dans un r\u00e9pertoire unique.","title":"2.1.2 : Abonnements et groupes de ressources"},{"location":"Cloud/Azure01/#22-ressources-azure-de-base","text":"Les avantages et l'utilisation de : Macines virtuelles, Azure App Services, Instances de containeur Azure (ACI), Azure Kubernetes services ( AKS) et Windows Virtual Desktop. R\u00e9seau Virtuel, Passerelel VPN, Virtual network peering et ExpressRoute. Container (Blob) Stockage, Disk Storage, Azure Database pour MySQL, Azure DB pour PostgreSQK, SQL Managed instance. Marketplace Azure.","title":"2.2 : Ressources Azure de base"},{"location":"Cloud/Azure01/#221-calcul","text":"Azure Compute est un service informatique \u00e0 la demande qui fournit des ressources telles que les disques, les processeurs, la m\u00e9moire, la mise en r\u00e9seau et les syst\u00e8mes d'exploitation. MAchines virtuelles Azure Les machines virtuelles Azure (VM) sont des \u00e9mulations logicielles d'ordinateurs physiques - Inclut le processeur virtuel, la m\u00e9moire, le stockage et la mise en r\u00e9seau. - Offre IaaS qui offre un contr\u00f4le total et personnalisation. Exercice : Cr\u00e9er une machine virtuelle sur Azure Portal. se connecter \u00e0 la VM installer le r\u00f4le serveur web et tester. Azure App Services Azure App Services est une plateforme enti\u00e8rement g\u00e9r\u00e9e pour cr\u00e9er,d\u00e9ployer et mettre \u00e0 l'\u00e9chelle rapidement des applications Web et des API. - il fonctionne avec .Net, NetC Core, Node.js, Java, Python ou php - Offre PaaS avec performances, s\u00e9curit\u00e9 et les exigences de conformit\u00e9. Exercice : Cr\u00e9er une application web en utilisant une image DOcker. Tester l'application web. Instances de containeur Azure Les conteneurs Azure sont un environnement virtualis\u00e9 l\u00e9ger qui ne n\u00e9cessite pas gestion du syst\u00e8me d'exploitation et peut r\u00e9pondre aux changements \u00e0 la demande. Instances de conteneur Azure: Offre Paas qui ex\u00e9cute des conteneurs Azure sans avoir besoin des VMs ou autres services. Service Kubernetes Azure: Un service d'orchestration pour des conteneurs avec architectures distribu\u00e9e. Exercice : Cr\u00e9er une instance de conteneur Deployer et tester le conteneur. Windows Virtuel Desktop Windows Virtual Desktop est une virtualisation de bureau et d'application qui tourne dans le cloud. - Cr\u00e9er un environnement de virtualisation de postes de travail complet sans avoir \u00e0 ex\u00e9cuter des serveurs de passerelle suppl\u00e9mentaires. - Publier des pools d'h\u00f4tes illimit\u00e9s pour accueillir divers charges de travail. - R\u00e9duire les co\u00fbts avec des ressources multi-sessions regroup\u00e9es","title":"2.2.1 : Calcul"},{"location":"Cloud/Azure01/#222-reseau","text":"Les service de r\u00e9seau Azure. R\u00e9seau virtuel Azure (VNet) Permet les ressources Azure de se communiquer entre eux, avec internet et le r\u00e9seau local. Passerelle r\u00e9seau priv\u00e9 virtuel (VPN) il est utilis\u00e9 pour envoyer des trafique encrypt\u00e9 entre le r\u00e9seau virtuel de Azure et le r\u00e9seau local via Internet. Express Route Azure \u00e9tend le r\u00e9seau local dans Azure via une connexion priv\u00e9e facilit\u00e9e par un fournisseur de connectivit\u00e9 Exercice: Cr\u00e9er un r\u00e9seau virtuel. Cr\u00e9er deux machines virtuelles tester la connection entre les VMs.","title":"2.2.2 : R\u00e9seau"},{"location":"Cloud/Azure01/#223-stockage","text":"Les services de stackage Azure :","title":"2.2.3 : Stockage"},{"location":"Cloud/Azure01/#224-base-de-donnees","text":"","title":"2.2.4 : Base de donn\u00e9es"},{"location":"Cloud/Azure01/#module-3-les-solutions-dazure-et-ses-outils-de-gestion","text":"","title":"Module 3 : Les solutions d'Azure et ses outils de gestion"},{"location":"Cloud/Azure01/#module-4-la-securite-azure-et-la-securite-reseau","text":"","title":"Module 4 : La s\u00e9curit\u00e9 Azure et la s\u00e9curit\u00e9 r\u00e9seau"},{"location":"Cloud/Azure01/#module-5-identite-gouvernance-confidentialite-et-conformite","text":"","title":"Module 5 : Identit\u00e9, gouvernance, confidentialit\u00e9 et conformit\u00e9"},{"location":"Cloud/Azure01/#module-6-tarifications-et-cycle-de-vie-azure","text":"","title":"Module 6 : Tarifications et cycle de vie Azure"},{"location":"Cloud/Google/","text":"Google Cloud : First Steps","title":"Google Cloud"},{"location":"Cloud/Google/#google-cloud-first-steps","text":"","title":"Google Cloud : First Steps"},{"location":"Docker/Docker-compose/","text":"Docker Labs - Docker Compose","title":"3. Docker-compose"},{"location":"Docker/Docker-compose/#docker-labs-docker-compose","text":"","title":"Docker Labs - Docker Compose"},{"location":"Docker/Docker/","text":"Docker : First Steps Lab 1 : Installation According to Docker Docs , Docker Engine can be installed in different ways, depending on our needs: - Most users set up Docker\u2019s repositories and install from them, for ease of installation and upgrade tasks. This is the recommended approach. Some users download the DEB package and install it manually and manage upgrades completely manually. This is useful in situations such as installing Docker on air-gapped systems with no access to the internet. In testing and development environments, some users choose to use automated convenience scripts to install Docker. Linux For Ubuntu 1. Set up the repository (Docker CE): Install packages to allow apt to use a repository over HTTPS. sudo apt-get update sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common Add Docker\u2019s official GPG key: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - - Set up the stable repository (amd64): sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\" 2. Install Docker sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io Executing the Docker Command Without Sudo (Optional): sudo usermod -aG docker $(whoami) Note You have to Log out and log back in so that your group membership is re-evaluated. Configure Docker to start on boot sudo systemctl enable docker.service sudo systemctl enable containerd.service Using the Docker Command sudo docker --help sudo docker info sudo docker \"subcommand\" --help For CentOS Installation options are available on Docker Docs for Centos Install using the repository sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce docker-ce-cli containerd.io Start Docker Daemon sudo systemctl start docker sudo usermod -aG docker $USER sudo chmod 777 /var/run/docker.sock Windows 10 / 11 https://docs.docker.com/desktop/windows/install Lab 2: Build and Manager images (Dockerfile) Docker offers two types of images: OS images (ubuntu, debian, etc) Dockerized Services /Apps Images (http, nodejs, mongodb, etc) Images are stored in the Docker Registry (Local, or remote like Docker Hub and Docker Store) Different methods to create Docker image : Image pull : loads an archive of files, as a base layer Container commit : create new couche (+ image) from current container Image build : construction form a Dockerfile (commands list) Working with Docker Images : Search for images available on Docker Hub: sudo docker search Ubuntu Note if you are using Windows , you can use cmd and run all the following commands without 'sudo' Download ubuntu image to your computer sudo docker pull ubuntu Using default tag: latest latest: Pulling from library/ubuntu ea362f368469: Pull complete Digest: sha256:b5a61709a9a44284d88fb12e5c48db0409cfad5b69d4ff8224077c57302df9cf Status: Downloaded newer image for ubuntu:latest docker.io/library/ubuntu:latest List all local docker images: sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE ubuntu latest d13c942271d6 3 weeks ago 72.8MB Pull Ubuntu 20.04 image sudo docker pull ubuntu:20.04 List all local docker images: sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE ubuntu 20.04 d13c942271d6 3 weeks ago 72.8MB ubuntu latest d13c942271d6 3 weeks ago 72.8MB - Run a new container docker1 sudo docker run -it --name docker1 ubuntu:20.04 - Run a new container docker2 sudo docker run -dt --name docker2 ubuntu:20.04 Note d (detach): Run container in background and print container ID i (interactive): Keep STDIN open even if not attached t (tty): Allocate a pseudo-TTY Use the following combination of keys instead: CTRL + P + Q. This command allows to leave the container without turning it off. If you use the exit command again within the container, it will shut down Build Docker Images Write a Dockerfile (Openssh and Apache2) $ echo \\ \"FROM ubuntu:20.04 #Install Openssh Server, Apache2 and git ARG DEBIAN_FRONTEND=noninteractive RUN apt-get update && apt-get install -y openssh-server git apache2 vim #Configure ssh RUN mkdir /var/run/sshd RUN echo 'root:root' | chpasswd RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config #Expose SSH and HTTP ports EXPOSE 22 80\">>Dockerfile Build image sudo docker build -t myimage . Sending build context to Docker daemon 22.96MB Step 1/6 : FROM ubuntu:20.04 ---> 4a689991aa24 Step 2/6 : RUN apt-get update && apt-get install -y openssh-server git apache2 python vim Removing intermediate container 02e7b71e66bf ---> a02abb273ca1 Step 3/6 : RUN mkdir /var/run/sshd ---> Running in 7debc3bd848a ^[[ARemoving intermediate container 7debc3bd848a ---> 43701b93496d Step 4/6 : RUN echo 'root:root' | chpasswd ---> Running in 4958eb98f69b Removing intermediate container 4958eb98f69b ---> 86051bdd6380 Step 5/6 : RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config ---> Running in df9955a1969b Removing intermediate container df9955a1969b ---> ce0c596cd18b Step 6/6 : EXPOSE 22 80 ---> Running in 1ef65145106a Removing intermediate container 1ef65145106a ---> 4fdd24f1b727 Successfully built 4fdd24f1b727 Successfully tagged myimage:latest List all local docker images sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE myimage latest d83e3fd00475 40 seconds ago 365MB ubuntu 20.04 d13c942271d6 3 weeks ago 72.8MB ubuntu latest d13c942271d6 3 weeks ago 72.8MB Build new version 'v1.0' sudo docker build -t=\"myimage:v1.0\" . Sending build context to Docker daemon 2.048kB Step 1/7 : FROM ubuntu:20.04 ---> d13c942271d6 Step 2/7 : ARG DEBIAN_FRONTEND=noninteractive ---> Using cache ---> 1382eae51bd9 Step 3/7 : RUN apt-get update && apt-get install -y openssh-server git apache2 vim ---> Using cache ---> b46e2d48bebb Step 4/7 : RUN mkdir /var/run/sshd ---> Using cache ---> c5ac495fe893 Step 5/7 : RUN echo 'root:root' | chpasswd ---> Using cache ---> aed6d12fa09d Step 6/7 : RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config ---> Using cache ---> 89c476d90de8 Step 7/7 : EXPOSE 22 80 ---> Using cache ---> d83e3fd00475 Successfully built d83e3fd00475 Successfully tagged myimage:v1.0 List all local docker images sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE myimage latest d83e3fd00475 6 minutes ago 365MB myimage v1.0 d83e3fd00475 6 minutes ago 365MB ubuntu 20.04 d13c942271d6 3 weeks ago 72.8MB ubuntu latest d13c942271d6 3 weeks ago 72.8MB Lab 3 : Manage Containers (Life Cycle, SSH, Port Forwarding) Create One container Remove all existing containers sudo docker rm -f $(sudo docker ps -a -q) Create a container with the new image sudo docker run -it --name docker1 myimage root@8cdc395b34ca:/# exit exit docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES docker start docker1 docker1 docker exec -d docker1 ls docker attach docker1 root@8cdc395b34ca:/# root@8cdc395b34ca:/# exit exit sudo docker run -dt --name docker2 myimage bin/sh -c \"while true; do echo hello world; sleep 1; done\" 7f192eb6f5bf7079843b30e1f7d3b2e7b4f8f12bb7c48a63101760e814633c07 # Display Docker2 logs sudo docker logs docker2 hello world hello world hello world hello world docker top docker2 UID PID PPID C STIME TTY TIME CMD root 18654 18630 0 17:50 pts/0 00:00:00 bin/sh -c while true; do echo hello world; sleep 1; done root 18908 18654 0 17:52 pts/0 00:00:00 sleep 1 # Stop the VMs sudo docker stop docker1 docker2 # Delete the VMs sudo docker rm docker1 docker2 Create 2 containers with port forwarding: There are two methods for assigning network ports to the Docker host: Docker can randomly assign a port (in the range 32768-61000) from the Docker host that it will map to the port 80 of the container. It is also possible to specify a port (for ex. 81 and 82) # Delete all containers sudo docker rm -f $(sudo docker ps -a -q) # Create 2 new containers sudo docker run -dt -p 81:80 --name docker1 myimage sudo docker run -dt -p 82:80 --name docker2 myimage sudo docker ps sudo docker info Access with SSH: Start SSH Daemon sudo docker exec -d docker1 /etc/init.d/ssh start sudo docker exec -d docker2 /etc/init.d/ssh start - Check IP Address of containers sudo docker inspect docker1 # get only the Ipv4 Adress sudo docker inspect --format '{{ .NetworkSettings.IPAddress }}' docker1 172.17.0.2 172.17.0.2 ssh root@172.17.0.2 # You can change the root password by running the following docker command: docker exec -itu 0 docker1 passwd Start Apache2 Server: Start Apache2 server sudo docker exec -d docker1 /etc/init.d/apache2 start sudo docker exec -d docker2 /etc/init.d/apache2 start - On browser try to connect : http://localhost:81 http://localhost:82 Delete all containers (runining and stoped) Running web application: Use Docker Commit to create images Lab 4 : Link containers (Mysql, Wordpress and Phpmyadmin) Lab 6 : Manage Network Lab 7 : Docker Hub Lab 8 : Manage Docker Registry","title":"2. First Steps"},{"location":"Docker/Docker/#docker-first-steps","text":"","title":"Docker : First Steps"},{"location":"Docker/Docker/#lab-1-installation","text":"According to Docker Docs , Docker Engine can be installed in different ways, depending on our needs: - Most users set up Docker\u2019s repositories and install from them, for ease of installation and upgrade tasks. This is the recommended approach. Some users download the DEB package and install it manually and manage upgrades completely manually. This is useful in situations such as installing Docker on air-gapped systems with no access to the internet. In testing and development environments, some users choose to use automated convenience scripts to install Docker.","title":"Lab 1 : Installation"},{"location":"Docker/Docker/#linux","text":"","title":"Linux"},{"location":"Docker/Docker/#for-ubuntu","text":"","title":"For Ubuntu"},{"location":"Docker/Docker/#1-set-up-the-repository-docker-ce","text":"Install packages to allow apt to use a repository over HTTPS. sudo apt-get update sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common Add Docker\u2019s official GPG key: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - - Set up the stable repository (amd64): sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $( lsb_release -cs ) stable\"","title":"1. Set up the repository (Docker CE):"},{"location":"Docker/Docker/#2-install-docker","text":"sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io Executing the Docker Command Without Sudo (Optional): sudo usermod -aG docker $(whoami) Note You have to Log out and log back in so that your group membership is re-evaluated. Configure Docker to start on boot sudo systemctl enable docker.service sudo systemctl enable containerd.service Using the Docker Command sudo docker --help sudo docker info sudo docker \"subcommand\" --help","title":"2. Install Docker"},{"location":"Docker/Docker/#for-centos","text":"Installation options are available on Docker Docs for Centos Install using the repository sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce docker-ce-cli containerd.io Start Docker Daemon sudo systemctl start docker sudo usermod -aG docker $USER sudo chmod 777 /var/run/docker.sock","title":"For CentOS"},{"location":"Docker/Docker/#windows-10-11","text":"https://docs.docker.com/desktop/windows/install","title":"Windows 10 / 11"},{"location":"Docker/Docker/#lab-2-build-and-manager-images-dockerfile","text":"Docker offers two types of images: OS images (ubuntu, debian, etc) Dockerized Services /Apps Images (http, nodejs, mongodb, etc) Images are stored in the Docker Registry (Local, or remote like Docker Hub and Docker Store) Different methods to create Docker image : Image pull : loads an archive of files, as a base layer Container commit : create new couche (+ image) from current container Image build : construction form a Dockerfile (commands list)","title":"Lab 2: Build and Manager images (Dockerfile)"},{"location":"Docker/Docker/#working-with-docker-images","text":"Search for images available on Docker Hub: sudo docker search Ubuntu Note if you are using Windows , you can use cmd and run all the following commands without 'sudo' Download ubuntu image to your computer sudo docker pull ubuntu Using default tag: latest latest: Pulling from library/ubuntu ea362f368469: Pull complete Digest: sha256:b5a61709a9a44284d88fb12e5c48db0409cfad5b69d4ff8224077c57302df9cf Status: Downloaded newer image for ubuntu:latest docker.io/library/ubuntu:latest List all local docker images: sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE ubuntu latest d13c942271d6 3 weeks ago 72.8MB Pull Ubuntu 20.04 image sudo docker pull ubuntu:20.04 List all local docker images: sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE ubuntu 20.04 d13c942271d6 3 weeks ago 72.8MB ubuntu latest d13c942271d6 3 weeks ago 72.8MB - Run a new container docker1 sudo docker run -it --name docker1 ubuntu:20.04 - Run a new container docker2 sudo docker run -dt --name docker2 ubuntu:20.04 Note d (detach): Run container in background and print container ID i (interactive): Keep STDIN open even if not attached t (tty): Allocate a pseudo-TTY Use the following combination of keys instead: CTRL + P + Q. This command allows to leave the container without turning it off. If you use the exit command again within the container, it will shut down","title":"Working with Docker Images :"},{"location":"Docker/Docker/#build-docker-images","text":"Write a Dockerfile (Openssh and Apache2) $ echo \\ \"FROM ubuntu:20.04 #Install Openssh Server, Apache2 and git ARG DEBIAN_FRONTEND=noninteractive RUN apt-get update && apt-get install -y openssh-server git apache2 vim #Configure ssh RUN mkdir /var/run/sshd RUN echo 'root:root' | chpasswd RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config #Expose SSH and HTTP ports EXPOSE 22 80\">>Dockerfile Build image sudo docker build -t myimage . Sending build context to Docker daemon 22.96MB Step 1/6 : FROM ubuntu:20.04 ---> 4a689991aa24 Step 2/6 : RUN apt-get update && apt-get install -y openssh-server git apache2 python vim Removing intermediate container 02e7b71e66bf ---> a02abb273ca1 Step 3/6 : RUN mkdir /var/run/sshd ---> Running in 7debc3bd848a ^[[ARemoving intermediate container 7debc3bd848a ---> 43701b93496d Step 4/6 : RUN echo 'root:root' | chpasswd ---> Running in 4958eb98f69b Removing intermediate container 4958eb98f69b ---> 86051bdd6380 Step 5/6 : RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config ---> Running in df9955a1969b Removing intermediate container df9955a1969b ---> ce0c596cd18b Step 6/6 : EXPOSE 22 80 ---> Running in 1ef65145106a Removing intermediate container 1ef65145106a ---> 4fdd24f1b727 Successfully built 4fdd24f1b727 Successfully tagged myimage:latest List all local docker images sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE myimage latest d83e3fd00475 40 seconds ago 365MB ubuntu 20.04 d13c942271d6 3 weeks ago 72.8MB ubuntu latest d13c942271d6 3 weeks ago 72.8MB Build new version 'v1.0' sudo docker build -t=\"myimage:v1.0\" . Sending build context to Docker daemon 2.048kB Step 1/7 : FROM ubuntu:20.04 ---> d13c942271d6 Step 2/7 : ARG DEBIAN_FRONTEND=noninteractive ---> Using cache ---> 1382eae51bd9 Step 3/7 : RUN apt-get update && apt-get install -y openssh-server git apache2 vim ---> Using cache ---> b46e2d48bebb Step 4/7 : RUN mkdir /var/run/sshd ---> Using cache ---> c5ac495fe893 Step 5/7 : RUN echo 'root:root' | chpasswd ---> Using cache ---> aed6d12fa09d Step 6/7 : RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config ---> Using cache ---> 89c476d90de8 Step 7/7 : EXPOSE 22 80 ---> Using cache ---> d83e3fd00475 Successfully built d83e3fd00475 Successfully tagged myimage:v1.0 List all local docker images sudo docker images REPOSITORY TAG IMAGE ID CREATED SIZE myimage latest d83e3fd00475 6 minutes ago 365MB myimage v1.0 d83e3fd00475 6 minutes ago 365MB ubuntu 20.04 d13c942271d6 3 weeks ago 72.8MB ubuntu latest d13c942271d6 3 weeks ago 72.8MB","title":"Build Docker Images"},{"location":"Docker/Docker/#lab-3-manage-containers-life-cycle-ssh-port-forwarding","text":"","title":"Lab 3 : Manage Containers (Life Cycle, SSH, Port Forwarding)"},{"location":"Docker/Docker/#create-one-container","text":"Remove all existing containers sudo docker rm -f $(sudo docker ps -a -q) Create a container with the new image sudo docker run -it --name docker1 myimage root@8cdc395b34ca:/# exit exit docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES docker start docker1 docker1 docker exec -d docker1 ls docker attach docker1 root@8cdc395b34ca:/# root@8cdc395b34ca:/# exit exit sudo docker run -dt --name docker2 myimage bin/sh -c \"while true; do echo hello world; sleep 1; done\" 7f192eb6f5bf7079843b30e1f7d3b2e7b4f8f12bb7c48a63101760e814633c07 # Display Docker2 logs sudo docker logs docker2 hello world hello world hello world hello world docker top docker2 UID PID PPID C STIME TTY TIME CMD root 18654 18630 0 17:50 pts/0 00:00:00 bin/sh -c while true; do echo hello world; sleep 1; done root 18908 18654 0 17:52 pts/0 00:00:00 sleep 1 # Stop the VMs sudo docker stop docker1 docker2 # Delete the VMs sudo docker rm docker1 docker2","title":"Create One container"},{"location":"Docker/Docker/#create-2-containers-with-port-forwarding","text":"There are two methods for assigning network ports to the Docker host: Docker can randomly assign a port (in the range 32768-61000) from the Docker host that it will map to the port 80 of the container. It is also possible to specify a port (for ex. 81 and 82) # Delete all containers sudo docker rm -f $(sudo docker ps -a -q) # Create 2 new containers sudo docker run -dt -p 81:80 --name docker1 myimage sudo docker run -dt -p 82:80 --name docker2 myimage sudo docker ps sudo docker info","title":"Create 2 containers with port forwarding:"},{"location":"Docker/Docker/#access-with-ssh","text":"Start SSH Daemon sudo docker exec -d docker1 /etc/init.d/ssh start sudo docker exec -d docker2 /etc/init.d/ssh start - Check IP Address of containers sudo docker inspect docker1 # get only the Ipv4 Adress sudo docker inspect --format '{{ .NetworkSettings.IPAddress }}' docker1 172.17.0.2 172.17.0.2 ssh root@172.17.0.2 # You can change the root password by running the following docker command: docker exec -itu 0 docker1 passwd","title":"Access with SSH:"},{"location":"Docker/Docker/#start-apache2-server","text":"Start Apache2 server sudo docker exec -d docker1 /etc/init.d/apache2 start sudo docker exec -d docker2 /etc/init.d/apache2 start","title":"Start Apache2 Server:"},{"location":"Docker/Docker/#-on-browser-try-to-connect","text":"http://localhost:81 http://localhost:82","title":"-  On browser try to connect :"},{"location":"Docker/Docker/#delete-all-containers-runining-and-stoped","text":"","title":"Delete all containers (runining and stoped)"},{"location":"Docker/Docker/#running-web-application","text":"","title":"Running web application:"},{"location":"Docker/Docker/#use-docker-commit-to-create-images","text":"","title":"Use Docker Commit to create images"},{"location":"Docker/Docker/#lab-4-link-containers-mysql-wordpress-and-phpmyadmin","text":"","title":"Lab 4 : Link containers (Mysql, Wordpress and Phpmyadmin)"},{"location":"Docker/Docker/#lab-6-manage-network","text":"","title":"Lab 6 : Manage Network"},{"location":"Docker/Docker/#lab-7-docker-hub","text":"","title":"Lab 7 : Docker Hub"},{"location":"Docker/Docker/#lab-8-manage-docker-registry","text":"","title":"Lab 8 : Manage Docker Registry"},{"location":"Docker/History/","text":"Pr\u00e9sentation : Docker 1. Introduction Dans cette pr\u00e9sentation, je vous donnerai des r\u00e9ponses aux questions suivantes : Conteneurs Linux LXC et Conteneurs Docker: Quelle(s) diff\u00e9rence(s)? Pourquoi utiliser des conteneurs plut\u00f4t que des Machines Virtuelles? Pourquoi utilise-t-on Docker et quelles sont ses atouts dans le d\u00e9veloppement et le d\u00e9ploiement des applications cloud-native? Conteneurs, sont-ils vraiment populaires dans les Data Center / Cloud Computing? Docker, Cloud, DevOps et microservices, quel lien? PS : les chapitres 1 & 2 ne contiennent que des explications visuelles, la r\u00e9daction commence \u00e0 la fin du chapitre 2. Big Picture ... Infrastructure IT: Changement de vitesse Docker (utilisation 2021) Adoption de la Technologie Conteneur Docker La Technologie Conteneur r\u00e9volutionne le Cloud Docker = La voie vers DevOps DevOps = Int\u00e9gration Continue & D\u00e9ploiement Continu (CI/CD) 2. Le Challenge Services ET Environnements multiples : Comment d\u00e9ployer? Produits ET Moyens multiples = Comment transporter? Usage des conteneurs = Portabilit\u00e9 Qu\u2019est ce qu\u2019un Conteneur ? Un processus s\u2019ex\u00e9cutant sur son propre syst\u00e8me de fichiers Vision limit\u00e9e du syst\u00e8me sur lequel il tourne Optimisation de l'usage des ressources Le noyau quant \u00e0 lui, est partag\u00e9 avec le syst\u00e8me h\u00f4te. D\u00e9riv\u00e9 du principe de CHROOT (sous Unix) et de m\u00e9canisme d\u2019isolation de syst\u00e8me de fichiers Une application packag\u00e9e dans un Rootfs Un Rootfs (le / d'un Linux) qui est appel\u00e9 image contient : 3. Conteneur Linux LXC LXC : C\u2019est quoi? La virtualisation par conteneurs se base sur la virtualisation Linux LXC, pour Linux Containers. Il s\u2019agit d\u2019une m\u00e9thode de cloisonnement au niveau de l\u2019OS. LXC est utilis\u00e9 pour faire fonctionner plusieurs instances Linux isol\u00e9s les uns des autres dans des conteneurs partageant le m\u00eame noyau et une petite partie du syst\u00e8me h\u00f4te. Chroot par rapport \u00e0 LXC Chroot est moins s\u00e9curis\u00e9 : Un conteneur chroot\u00e9 partage son /proc et son /dev avec l'h\u00f4te, et il a donc tout libert\u00e9 pour s'introduire dans le syst\u00e8me Chroot donne une isolation moins faible : M\u00eame si le syst\u00e8me de fichier d\u2019un conteneur est correctement isol\u00e9, les processus (li\u00e9s aux services qui tournent dedans) ne sont pas isol\u00e9s (ils peuvent voir ceux de l\u2019h\u00f4te) Les services d\u2019un conteneur \u00e9coutent sur la m\u00eame interface r\u00e9seau Il n'est pas pratique du tout d\u00e9s qu'il s'agit de faire tourner plein de services dans le conteneur LXC offre un jeu de nouvelles techniques d\u2019isolation dans le kernel permettant de cr\u00e9er facilement un super-chroot beaucoup plus isolant que la version d'origine. LXC : Technologies de base LXC repose sur la notion de groupes de contr\u00f4le Linux (cgroups) disponibles depuis sa version 2.6.24 Chaque groupe de contr\u00f4le permet de limiter et d\u2019isoler l\u2019utilisation des ressources qu\u2019un processus peut utiliser (processeur, m\u00e9moire, r\u00e9seau, syst\u00e8me de fichier et acc\u00e8s E/S), et ce sans recourir \u00e0 des machines virtuelles \u00e0 part enti\u00e8re. LXC repose aussi sur une isolation des espaces de nommage du noyau (namespace): Permet d\u2019emp\u00eacher qu\u2019un groupe puisse \u00ab voir \u00bb les ressources des autres groupes (syst\u00e8mes de fichiers, les ID r\u00e9seau et les ID utilisateur) LXC repose sur les biblioth\u00e8ques Profils Apparmor (Application Armor) et SELinux (Security-Enhanced Linux) pour la s\u00e9curit\u00e9 : En termes des restrictions, permissions et droits utilisateur LXC : Vue d\u2019ensemble Docker : Un LXC augment\u00e9 Docker ne remplace pas les conteneurs Linux LXC (lanc\u00e9 en 2013) L'id\u00e9e consiste \u00e0 utiliser LXC comme base, puis \u00e0 ajouter des capacit\u00e9s de niveau sup\u00e9rieur Docker autorise la portabilit\u00e9 entre machines (qui ex\u00e9cutent aussi Docker) et permet ainsi \u00e0 une application et \u00e0 ses composants d'exister en tant qu'objet mobile unique. Avec LXC, d\u00e9placer une application sur une autre machine peut introduire des diff\u00e9rences susceptibles d'emp\u00eacher le conteneur de l'application de s'ex\u00e9cuter. Docker pour les DEV Build once\u2026 run everywhere Un conteneur Docker est un environnement s\u00e9curis\u00e9, stable, portable sur tous environnements Docker r\u00e9sout les probl\u00e8mes de d\u00e9pendances ou de packages manquant lors du d\u00e9ploiement Docker pour les DEV Configure once\u2026 run everywhere Rend le cycle de vie des applications plus efficace, consistant, et reproductible Am\u00e9liore le rendu de la qualit\u00e9 du code d\u00e9velopp\u00e9 \u00c9limine d\u00e9finitivement les inconsistances entre les diff\u00e9rents environnements de d\u00e9veloppement, test, et production Docker pour l\u2019entreprise Une m\u00eame plate-forme pour toutes les applications Acc\u00e9l\u00e8re la mise en place de pipelines de d\u00e9ploiement automatiques Interface commune qui permet aux Devs et Ops de travailler ensemble Am\u00e9liore l\u2019autonomie et la productivit\u00e9 des \u00e9quipes Dev et Ops ==> Agilit\u00e9, Portabilit\u00e9, Consistance, Optimisation des co\u00fbts, Elasticit\u00e9/Scalabilit\u00e9\u2026 Histoire 2008 : dotCloud, co-fond\u00e9e by Solomon Hykes PaaS o D\u00e9but de la plate-forme Docker qui simplifie l\u2019usage des containers Linux 2010 : dotCloud incub\u00e9e \u00e0 Ycombinator 2011 : Plate-forme Docker mise en open source 2013 : Cr\u00e9ation de Docker.Inc pour soutenir le projet 2017 : Dissociation du produit Docker et du projet Moby Format des conteneurs Docker Avant Docker 0.9 Utilisation de la technologie LXC pour g\u00e9rer les containers Depuis Docker 0.9 Access direct \u00e0 l\u2019API des containers Linux Utilisation de la librairie libcontainer (un wrapper qui combine les Namespaces + Cgroup + UnionFS) UnionFS offre un stockage sur plusieurs couches en lecture seule (l\u00e9ger et rapide), utilis\u00e9 pour fournir les blocs de construction des conteneurs Editions Docker : CE et EE Open Container Initiative OCI D\u00e9marche initi\u00e9e par Docker et CoreOS et cr\u00e9\u00e9e par la Linux Foundation en 2015 Cr\u00e9er une gouvernance des technologies de containers (sp\u00e9cifications et standardisation minima autour des technologies de containerisation) Unification des formats de containers (Docker, Rocket\u2026) Standardiser les formats des images de containers pour faciliter l\u2019interop\u00e9rabilit\u00e9 entre les solutions du march\u00e9 et les cloud providers Standardiser certaines actions des moteurs \u00ab runtime \u00bb afin de disposer de commandes communes (start, exec, pause..) 4. Conteneurs VS Machines virtuelles Hyperviseur vs Docker Hyperviseur vs Docker (Analogie) Pourquoi des conteneurs plut\u00f4t que des machines virtuelles ? -Les conteneurs Docker r\u00e9volutionnent la virtualisation car l\u2019id\u00e9e n\u2019est pas nouvelle - La virtualisation a un co\u00fbt car les OS invit\u00e9s requi\u00e8rent chacun des ressources (m\u00e9moire, CPU, r\u00e9seaux) - Augmentation de la taille de chaque machine virtuelle, ce qui limite le nombre de machines virtuelles qu'un serveur peut h\u00e9berger - La conteneurisation vise \u00e0 virtualiser les applications sans trop alourdir le syst\u00e8me - Favoriser l'int\u00e9gration rapide d'applications dans des conteneurs. Des conteneurs dans des VMs ? 5. Plateforme Docker Docker : Vue d\u2019ensemble 6. Images Docker","title":"1. Introduction \u00e0 Docker"},{"location":"Docker/History/#presentation-docker","text":"","title":"Pr\u00e9sentation : Docker"},{"location":"Docker/History/#1-introduction","text":"Dans cette pr\u00e9sentation, je vous donnerai des r\u00e9ponses aux questions suivantes : Conteneurs Linux LXC et Conteneurs Docker: Quelle(s) diff\u00e9rence(s)? Pourquoi utiliser des conteneurs plut\u00f4t que des Machines Virtuelles? Pourquoi utilise-t-on Docker et quelles sont ses atouts dans le d\u00e9veloppement et le d\u00e9ploiement des applications cloud-native? Conteneurs, sont-ils vraiment populaires dans les Data Center / Cloud Computing? Docker, Cloud, DevOps et microservices, quel lien? PS : les chapitres 1 & 2 ne contiennent que des explications visuelles, la r\u00e9daction commence \u00e0 la fin du chapitre 2.","title":"1. Introduction"},{"location":"Docker/History/#big-picture","text":"","title":"Big Picture ..."},{"location":"Docker/History/#infrastructure-it-changement-de-vitesse","text":"","title":"Infrastructure IT: Changement de vitesse"},{"location":"Docker/History/#docker-utilisation-2021","text":"","title":"Docker (utilisation 2021)"},{"location":"Docker/History/#adoption-de-la-technologie-conteneur-docker","text":"","title":"Adoption de la Technologie Conteneur Docker"},{"location":"Docker/History/#la-technologie-conteneur-revolutionne-le-cloud","text":"","title":"La Technologie Conteneur r\u00e9volutionne le Cloud"},{"location":"Docker/History/#docker-la-voie-vers-devops","text":"DevOps = Int\u00e9gration Continue & D\u00e9ploiement Continu (CI/CD)","title":"Docker = La voie vers DevOps"},{"location":"Docker/History/#2-le-challenge","text":"","title":"2. Le Challenge"},{"location":"Docker/History/#services-et-environnements-multiples-comment-deployer","text":"","title":"Services ET Environnements multiples : Comment d\u00e9ployer?"},{"location":"Docker/History/#produits-et-moyens-multiples-comment-transporter","text":"","title":"Produits ET Moyens multiples = Comment transporter?"},{"location":"Docker/History/#usage-des-conteneurs-portabilite","text":"","title":"Usage des conteneurs = Portabilit\u00e9"},{"location":"Docker/History/#quest-ce-quun-conteneur","text":"Un processus s\u2019ex\u00e9cutant sur son propre syst\u00e8me de fichiers Vision limit\u00e9e du syst\u00e8me sur lequel il tourne Optimisation de l'usage des ressources Le noyau quant \u00e0 lui, est partag\u00e9 avec le syst\u00e8me h\u00f4te. D\u00e9riv\u00e9 du principe de CHROOT (sous Unix) et de m\u00e9canisme d\u2019isolation de syst\u00e8me de fichiers Une application packag\u00e9e dans un Rootfs Un Rootfs (le / d'un Linux) qui est appel\u00e9 image contient :","title":"Qu\u2019est ce qu\u2019un Conteneur ?"},{"location":"Docker/History/#3-conteneur-linux-lxc","text":"","title":"3. Conteneur Linux LXC"},{"location":"Docker/History/#lxc-cest-quoi","text":"La virtualisation par conteneurs se base sur la virtualisation Linux LXC, pour Linux Containers. Il s\u2019agit d\u2019une m\u00e9thode de cloisonnement au niveau de l\u2019OS. LXC est utilis\u00e9 pour faire fonctionner plusieurs instances Linux isol\u00e9s les uns des autres dans des conteneurs partageant le m\u00eame noyau et une petite partie du syst\u00e8me h\u00f4te.","title":"LXC : C\u2019est quoi?"},{"location":"Docker/History/#chroot-par-rapport-a-lxc","text":"Chroot est moins s\u00e9curis\u00e9 : Un conteneur chroot\u00e9 partage son /proc et son /dev avec l'h\u00f4te, et il a donc tout libert\u00e9 pour s'introduire dans le syst\u00e8me Chroot donne une isolation moins faible : M\u00eame si le syst\u00e8me de fichier d\u2019un conteneur est correctement isol\u00e9, les processus (li\u00e9s aux services qui tournent dedans) ne sont pas isol\u00e9s (ils peuvent voir ceux de l\u2019h\u00f4te) Les services d\u2019un conteneur \u00e9coutent sur la m\u00eame interface r\u00e9seau Il n'est pas pratique du tout d\u00e9s qu'il s'agit de faire tourner plein de services dans le conteneur LXC offre un jeu de nouvelles techniques d\u2019isolation dans le kernel permettant de cr\u00e9er facilement un super-chroot beaucoup plus isolant que la version d'origine.","title":"Chroot par rapport \u00e0 LXC"},{"location":"Docker/History/#lxc-technologies-de-base","text":"LXC repose sur la notion de groupes de contr\u00f4le Linux (cgroups) disponibles depuis sa version 2.6.24 Chaque groupe de contr\u00f4le permet de limiter et d\u2019isoler l\u2019utilisation des ressources qu\u2019un processus peut utiliser (processeur, m\u00e9moire, r\u00e9seau, syst\u00e8me de fichier et acc\u00e8s E/S), et ce sans recourir \u00e0 des machines virtuelles \u00e0 part enti\u00e8re. LXC repose aussi sur une isolation des espaces de nommage du noyau (namespace): Permet d\u2019emp\u00eacher qu\u2019un groupe puisse \u00ab voir \u00bb les ressources des autres groupes (syst\u00e8mes de fichiers, les ID r\u00e9seau et les ID utilisateur) LXC repose sur les biblioth\u00e8ques Profils Apparmor (Application Armor) et SELinux (Security-Enhanced Linux) pour la s\u00e9curit\u00e9 : En termes des restrictions, permissions et droits utilisateur","title":"LXC : Technologies de base"},{"location":"Docker/History/#lxc-vue-densemble","text":"","title":"LXC : Vue d\u2019ensemble"},{"location":"Docker/History/#docker-un-lxc-augmente","text":"Docker ne remplace pas les conteneurs Linux LXC (lanc\u00e9 en 2013) L'id\u00e9e consiste \u00e0 utiliser LXC comme base, puis \u00e0 ajouter des capacit\u00e9s de niveau sup\u00e9rieur Docker autorise la portabilit\u00e9 entre machines (qui ex\u00e9cutent aussi Docker) et permet ainsi \u00e0 une application et \u00e0 ses composants d'exister en tant qu'objet mobile unique. Avec LXC, d\u00e9placer une application sur une autre machine peut introduire des diff\u00e9rences susceptibles d'emp\u00eacher le conteneur de l'application de s'ex\u00e9cuter.","title":"Docker : Un LXC augment\u00e9"},{"location":"Docker/History/#docker-pour-les-dev","text":"Build once\u2026 run everywhere Un conteneur Docker est un environnement s\u00e9curis\u00e9, stable, portable sur tous environnements Docker r\u00e9sout les probl\u00e8mes de d\u00e9pendances ou de packages manquant lors du d\u00e9ploiement","title":"Docker pour les DEV"},{"location":"Docker/History/#docker-pour-les-dev_1","text":"Configure once\u2026 run everywhere Rend le cycle de vie des applications plus efficace, consistant, et reproductible Am\u00e9liore le rendu de la qualit\u00e9 du code d\u00e9velopp\u00e9 \u00c9limine d\u00e9finitivement les inconsistances entre les diff\u00e9rents environnements de d\u00e9veloppement, test, et production","title":"Docker pour les DEV"},{"location":"Docker/History/#docker-pour-lentreprise","text":"Une m\u00eame plate-forme pour toutes les applications Acc\u00e9l\u00e8re la mise en place de pipelines de d\u00e9ploiement automatiques Interface commune qui permet aux Devs et Ops de travailler ensemble Am\u00e9liore l\u2019autonomie et la productivit\u00e9 des \u00e9quipes Dev et Ops ==> Agilit\u00e9, Portabilit\u00e9, Consistance, Optimisation des co\u00fbts, Elasticit\u00e9/Scalabilit\u00e9\u2026","title":"Docker pour l\u2019entreprise"},{"location":"Docker/History/#histoire","text":"2008 : dotCloud, co-fond\u00e9e by Solomon Hykes PaaS o D\u00e9but de la plate-forme Docker qui simplifie l\u2019usage des containers Linux 2010 : dotCloud incub\u00e9e \u00e0 Ycombinator 2011 : Plate-forme Docker mise en open source 2013 : Cr\u00e9ation de Docker.Inc pour soutenir le projet 2017 : Dissociation du produit Docker et du projet Moby","title":"Histoire"},{"location":"Docker/History/#format-des-conteneurs-docker","text":"Avant Docker 0.9 Utilisation de la technologie LXC pour g\u00e9rer les containers Depuis Docker 0.9 Access direct \u00e0 l\u2019API des containers Linux Utilisation de la librairie libcontainer (un wrapper qui combine les Namespaces + Cgroup + UnionFS) UnionFS offre un stockage sur plusieurs couches en lecture seule (l\u00e9ger et rapide), utilis\u00e9 pour fournir les blocs de construction des conteneurs","title":"Format des conteneurs Docker"},{"location":"Docker/History/#editions-docker-ce-et-ee","text":"","title":"Editions Docker : CE et EE"},{"location":"Docker/History/#open-container-initiative-oci","text":"D\u00e9marche initi\u00e9e par Docker et CoreOS et cr\u00e9\u00e9e par la Linux Foundation en 2015 Cr\u00e9er une gouvernance des technologies de containers (sp\u00e9cifications et standardisation minima autour des technologies de containerisation) Unification des formats de containers (Docker, Rocket\u2026) Standardiser les formats des images de containers pour faciliter l\u2019interop\u00e9rabilit\u00e9 entre les solutions du march\u00e9 et les cloud providers Standardiser certaines actions des moteurs \u00ab runtime \u00bb afin de disposer de commandes communes (start, exec, pause..)","title":"Open Container Initiative OCI"},{"location":"Docker/History/#4-conteneurs-vs-machines-virtuelles","text":"","title":"4. Conteneurs VS Machines virtuelles"},{"location":"Docker/History/#hyperviseur-vs-docker","text":"","title":"Hyperviseur vs Docker"},{"location":"Docker/History/#hyperviseur-vs-docker-analogie","text":"Pourquoi des conteneurs plut\u00f4t que des machines virtuelles ? -Les conteneurs Docker r\u00e9volutionnent la virtualisation car l\u2019id\u00e9e n\u2019est pas nouvelle - La virtualisation a un co\u00fbt car les OS invit\u00e9s requi\u00e8rent chacun des ressources (m\u00e9moire, CPU, r\u00e9seaux) - Augmentation de la taille de chaque machine virtuelle, ce qui limite le nombre de machines virtuelles qu'un serveur peut h\u00e9berger - La conteneurisation vise \u00e0 virtualiser les applications sans trop alourdir le syst\u00e8me - Favoriser l'int\u00e9gration rapide d'applications dans des conteneurs.","title":"Hyperviseur vs Docker (Analogie)"},{"location":"Docker/History/#des-conteneurs-dans-des-vms","text":"","title":"Des conteneurs dans des VMs ?"},{"location":"Docker/History/#5-plateforme-docker","text":"","title":"5. Plateforme Docker"},{"location":"Docker/History/#docker-vue-densemble","text":"","title":"Docker : Vue d\u2019ensemble"},{"location":"Docker/History/#6-images-docker","text":"","title":"6. Images Docker"},{"location":"Docker/Swarm/","text":"Docker Labs - Docker Swarm","title":"4. Docker Swarm"},{"location":"Docker/Swarm/#docker-labs-docker-swarm","text":"","title":"Docker Labs - Docker Swarm"},{"location":"Iaac/Ansible/","text":"Ansible Labs","title":"Ansible"},{"location":"Iaac/Ansible/#ansible-labs","text":"","title":"Ansible Labs"},{"location":"Iaac/Terraform/","text":"Terraform Lab Cr\u00e9ation du provider : il faut cr\u00e9er un fichier main.tf contenant le code suivant : provider \"aws\" { region = \"eu-west-3\" # La r\u00e9gion de Paris access_key = \"votre-cl\u00e9-dacces\" secret_key = \"votre-cl\u00e9-secr\u00e8te\" } Cr\u00e9ation de la ressource : resource \"aws_instance\" \"my_ec2_instance\" { ami = \"ami-0a89a7563fc68be84\" # Ubuntu server 20.04 LTS SSD volume type instance_type = \"t2.micro\" # 1vCPU 1 Go RAM - inclus dans l'offre gratuit de AWS } Creation de l'instance En combinant les exemples pr\u00e9c\u00e9dents, nous nous retrouvons avec le code suivant : ```` provider \"aws\" { region = \"eu-west-3\" # La r\u00e9gion de Paris access_key = \"votre-cl\u00e9-dacces\" secret_key = \"votre-cl\u00e9-secr\u00e8te\" } provider \"aws\" { region = \"eu-west-3\" # La r\u00e9gion de Paris access_key = \"votre-cl\u00e9-dacces\" secret_key = \"votre-cl\u00e9-secr\u00e8te\" } ``` Depuis un terminal, acc\u00e9der au dossier contenant fichier main.tf et ex\u00e9cuter la commande suivante : terraform init","title":"Terraform"},{"location":"Iaac/Terraform/#terraform-lab","text":"Cr\u00e9ation du provider : il faut cr\u00e9er un fichier main.tf contenant le code suivant : provider \"aws\" { region = \"eu-west-3\" # La r\u00e9gion de Paris access_key = \"votre-cl\u00e9-dacces\" secret_key = \"votre-cl\u00e9-secr\u00e8te\" } Cr\u00e9ation de la ressource : resource \"aws_instance\" \"my_ec2_instance\" { ami = \"ami-0a89a7563fc68be84\" # Ubuntu server 20.04 LTS SSD volume type instance_type = \"t2.micro\" # 1vCPU 1 Go RAM - inclus dans l'offre gratuit de AWS } Creation de l'instance En combinant les exemples pr\u00e9c\u00e9dents, nous nous retrouvons avec le code suivant : ```` provider \"aws\" { region = \"eu-west-3\" # La r\u00e9gion de Paris access_key = \"votre-cl\u00e9-dacces\" secret_key = \"votre-cl\u00e9-secr\u00e8te\" } provider \"aws\" { region = \"eu-west-3\" # La r\u00e9gion de Paris access_key = \"votre-cl\u00e9-dacces\" secret_key = \"votre-cl\u00e9-secr\u00e8te\" } ``` Depuis un terminal, acc\u00e9der au dossier contenant fichier main.tf et ex\u00e9cuter la commande suivante : terraform init","title":"Terraform Lab"},{"location":"Iaac/Vagrant/","text":"Vagrant Labs 1. VMware Workstation Prerequis : Vagrant install\u00e9 sur la machine h\u00f4te ==> https://www.vagrantup.com/downloads vmware utility install\u00e9 ==> https://www.vagrantup.com/vmware/downloads Installer VMware provider plugin avec la commande : vagrant plugin install vagrant-vmware-desktop Cr\u00e9ation de la VM : Cloner le dep\u00f4t : git clone git@github.com:fghamacha/vagrant.git acc\u00e9der au dossier souhaiter et cr\u00e9er le VM en lan\u00e7ant la commande : vagrant up la cr\u00e9ation de la VM n'est pas instantan\u00e9e, il faut vagrant download l'image de la VM depuis le site https://vagrantcloud.com Cr\u00e9ation de la VM : Pour lancer powershell de la machine guest dans la machine h\u00f4te : vagrant powershell Lancer directement une commande powershell vagrant powershell -c MaCommande D\u00e9truire la VM Pour d\u00e9truire la VM : vagrant destroy 2. VMware ESXI 3. VirtualBox","title":"Vagrant"},{"location":"Iaac/Vagrant/#vagrant-labs","text":"","title":"Vagrant Labs"},{"location":"Iaac/Vagrant/#1-vmware-workstation","text":"","title":"1. VMware Workstation"},{"location":"Iaac/Vagrant/#prerequis","text":"Vagrant install\u00e9 sur la machine h\u00f4te ==> https://www.vagrantup.com/downloads vmware utility install\u00e9 ==> https://www.vagrantup.com/vmware/downloads Installer VMware provider plugin avec la commande : vagrant plugin install vagrant-vmware-desktop","title":"Prerequis :"},{"location":"Iaac/Vagrant/#creation-de-la-vm","text":"Cloner le dep\u00f4t : git clone git@github.com:fghamacha/vagrant.git acc\u00e9der au dossier souhaiter et cr\u00e9er le VM en lan\u00e7ant la commande : vagrant up la cr\u00e9ation de la VM n'est pas instantan\u00e9e, il faut vagrant download l'image de la VM depuis le site https://vagrantcloud.com","title":"Cr\u00e9ation de la VM :"},{"location":"Iaac/Vagrant/#creation-de-la-vm_1","text":"Pour lancer powershell de la machine guest dans la machine h\u00f4te : vagrant powershell Lancer directement une commande powershell vagrant powershell -c MaCommande","title":"Cr\u00e9ation de la VM :"},{"location":"Iaac/Vagrant/#detruire-la-vm","text":"Pour d\u00e9truire la VM : vagrant destroy","title":"D\u00e9truire la VM"},{"location":"Iaac/Vagrant/#2-vmware-esxi","text":"","title":"2. VMware ESXI"},{"location":"Iaac/Vagrant/#3-virtualbox","text":"","title":"3. VirtualBox"},{"location":"K8s/Kubernetes/","text":"Docker Labs - Kubernetes","title":"Kubernetes"},{"location":"K8s/Kubernetes/#docker-labs-kubernetes","text":"","title":"Docker Labs - Kubernetes"}]}